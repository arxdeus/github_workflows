name: Publish
permissions:
  contents: write
on:
  workflow_call:
    inputs:
      package-name:
        type: string
        required: true
      package-version:
        type: string
        default: '9.9.9'
        required: true

jobs:
  setup:
      runs-on: ubuntu-latest
      outputs:
        flutter-version: ${{ steps.flutter-version.outputs.version }}
      steps:
        - name: ðŸ“¦ Get the .github actions
          uses: actions/checkout@v4
          with:
            fetch-tags: true
            fetch-depth: 0
        - name: Get Flutter SDK version
          id: flutter-version
          run: |
            sdk_constraint=$(cat pubspec.yaml | yq .environment.flutter)
            version=$(cat .fvmrc | jq -r .flutter)
            echo "version=$version" >> "$GITHUB_OUTPUT"
  dry_publish:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        flutter-version:
          - ${{ needs.setup.outputs.flutter-version }}
    permissions:
      id-token: write
      contents: write
    steps:
      - name: ðŸš‚ Setup Flutter and dependencies
        uses: arxdeus/github_workflows/actions/flutter_setup@main
        with:
          flutter-version: ${{ matrix.flutter-version }}

      - name: Check if release exists
        id: check_release
        run: |
          RELEASE=$(gh release view ${{ inputs.package-name }}-v${{ inputs.package-version }} --json tagName -q .tagName || echo "not_found")
          if [[ "$RELEASE" == "not_found" ]]; then
            echo "CREATE_RELEASE=true" >> $GITHUB_OUTPUT
          else
            echo "CREATE_RELEASE=false" >> $GITHUB_OUTPUT
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Set default branch.
        run: git remote set-head origin --auto
        shell: bash
      - name: Append CHANGELOG
        shell: bash
        run: |
          echo $(git describe --tags --abbrev=0)
          cat <<< "$(git log --grep=release* --invert-grep --pretty=format:"- %s"  $(git describe --tags --abbrev=0)..origin/HEAD packages/${{ inputs.package-name }})$(echo $'\r\n')$(cat packages/${{ inputs.package-name }}/CHANGELOG.md)" > packages/${{ inputs.package-name }}/CHANGELOG.md
          cat <<< "## ${{ inputs.package-version }} $(echo $'\r\n')$(cat packages/${{ inputs.package-name }}/CHANGELOG.md)" > packages/${{ inputs.package-name }}/CHANGELOG.md
          cat packages/${{ inputs.package-name }}/CHANGELOG.md

      - name: Dry publish check
        run: cd packages/${{ inputs.package-name }} && flutter pub publish --dry-run
