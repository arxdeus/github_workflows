name: Publish
permissions:
  contents: write
on:
  workflow_call:
    inputs:
      package-name:
        type: string
        required: true
      package-version:
        type: string
        required: true

jobs:
  setup:
      runs-on: ubuntu-latest
      outputs:
        flutter-version: ${{ steps.flutter-version.outputs.version }}
      steps:
        - name: ðŸ“¦ Get the .github actions
          uses: actions/checkout@v4
          with:
            sparse-checkout: |
              .github
        - name: Get Flutter SDK version
          id: flutter-version
          run: |
            sdk_constraint=$(cat pubspec.yaml | yq .environment.flutter)
            version=$(cat .fvmrc | jq -r .flutter)
            echo "version=$version" >> "$GITHUB_OUTPUT"
  publish:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        flutter-version:
          - ${{ needs.setup.outputs.flutter-version }}
    permissions:
      id-token: write
      contents: write
    steps:
      - name: ðŸš‚ Setup Flutter and dependencies
        uses: arxdeus/github_workflows/actions/flutter_setup@main
        with:
          flutter-version: ${{ matrix.flutter-version }}

      - name: Check if release exists
        id: check_release
        run: |
          RELEASE=$(gh release view ${{ inputs.package-name }}-v${{ inputs.package-version }} --json tagName -q .tagName || echo "not_found")
          if [[ "$RELEASE" == "not_found" ]]; then
            echo "CREATE_RELEASE=true" >> $GITHUB_OUTPUT
          else
            exit 1;
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set default branch.
        run: git remote set-head origin --auto
        shell: bash
      - name: Append CHANGELOG
        shell: bash
        run: |
          cat <<< "$(git log --grep="release*" --invert-grep --pretty=format:"- %s" $(git tag -n --sort=-version:refname "${{ inputs.package-name }}-v*" | head -n1 | xargs -L1)..HEAD packages/${{ inputs.package-name }})$(echo $'\r\n')$(echo $'\r\n')$(cat packages/${{ inputs.package-name }}/CHANGELOG.md)" > packages/${{ inputs.package-name }}/CHANGELOG.md
          cat <<< "## ${{ inputs.package-version }}$(echo $'\r\n')$(echo $'\r\n')$(cat packages/${{ inputs.package-name }}/CHANGELOG.md)" > packages/${{ inputs.package-name }}/CHANGELOG.md
          cat packages/${{ inputs.package-name }}/CHANGELOG.md

      - name: ðŸ”¢ Set up version from tags
        id: set-version
        shell: bash
        run: |
          sed -i "s/^version:.*/version: ${{ inputs.package-version }}/" packages/${{ inputs.package-name }}/pubspec.yaml
          ls -d packages/* | xargs -I{} sed -i "s/^  ${{ inputs.package-name }}: ^.*/  ${{ inputs.package-name }}: ^${{ inputs.package-version }}/" {}/pubspec.yaml
          echo "Version set to ${{ inputs.package-version }}"

      - name: Commit version update
        run: |
          git config --global user.name github-actions[bot]
          git config --global user.email github-actions[bot]@users.noreply.github.com
          git commit -am "release(${{ inputs.package-name }}): v${{ inputs.package-version }}"
          git tag ${{ inputs.package-name }}-v${{ inputs.package-version }}
          git push origin HEAD:main --tags
          git checkout ${{ inputs.package-name }}-v${{ inputs.package-version }}

      - name: Setup OIDC token
        uses: dart-lang/setup-dart@v1

      - name: Create GitHub Release
        if: steps.check_release.outputs.CREATE_RELEASE == 'true'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ inputs.package-name }}-v${{ inputs.package-version }}
          name: ${{ inputs.package-name }} - v${{ inputs.package-version }}
          body: "Automated release for `${{ inputs.package-name }}`: v${{ inputs.package-version }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to pub.dev
        run: cd packages/${{ inputs.package-name }} && flutter pub publish --force
